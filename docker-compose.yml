services:
  cocktails_db:
    image: postgres:latest
    hostname: postgres
    environment:
      POSTGRES_USER: ${DOCKER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DOCKER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DOCKER_POSTGRES_DB}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DOCKER_POSTGRES_USER} -d ${DOCKER_POSTGRES_DB}'" ]
      interval: 3s
      timeout: 3s
      retries: 3


#  cocktails_app:
#    depends_on:
#      cocktails_db:
#        condition: service_healthy
#    image: booze-cocktail:latest
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    ports:
#      - 8080:8080
#    env_file:
#      - .env
#    environment:
#      - SPRING_DATASOURCE_USERNAME=${DOCKER_POSTGRES_USER}
#      - SPRING_DATASOURCE_PASSWORD=${DOCKER_POSTGRES_PASSWORD}
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${DOCKER_POSTGRES_DB}
#      - SPRING_PROFILES_ACTIVE=prod

  config:
    image: config:latest
    container_name: config
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=itmo'
      - 'JWT_EXPIRED=15'
    build:
      context: ./config
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - cocktails_db
    healthcheck:
      test: "curl --fail --silent config:8888/actuator/health | grep UP || exit 1"
      interval: 15s
      retries: 5
      timeout: 10s

  eureka:
    image: eureka:latest
    container_name: eureka
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=itmo'
      - 'JWT_EXPIRED=15'
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      config:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent eureka:8761/actuator/health | grep UP || exit 1"
      interval: 30s
      retries: 5
      timeout: 10s


  gateway:
    image: gateway:latest
    container_name: gateway
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=itmo'
      - 'JWT_EXPIRED=15'
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      eureka:
        condition: service_healthy

volumes:
  db-data:
