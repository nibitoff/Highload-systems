/*
 * This file was generated by the Gradle 'init' task.
 */

rootProject.name = 'gateway'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('spring-boot', '3.2.0')
            version('spring-cloud', '4.1.0')
            version('io-json', '0.11.5')
            version('testcontainers', '1.19.3')
            version('mapstruct', '1.5.5.Final')

            library('spring-boot-actuator', 'org.springframework.boot', 'spring-boot-starter-actuator').versionRef('spring-boot')
            library('spring-boot-validation', 'org.springframework.boot', 'spring-boot-starter-validation').versionRef('spring-boot')
            library('spring-boot-security', 'org.springframework.boot', 'spring-boot-starter-security').versionRef('spring-boot')
            library('spring-boot-data', 'org.springframework.boot', 'spring-boot-starter-data-jpa').versionRef('spring-boot')
            library('spring-boot-web', 'org.springframework.boot', 'spring-boot-starter-web').versionRef('spring-boot')

            library('spring-cloud-config', 'org.springframework.cloud', 'spring-cloud-starter-config').versionRef('spring-cloud')
            library('spring-cloud-bootstrap', 'org.springframework.cloud', 'spring-cloud-starter-bootstrap').versionRef('spring-cloud')
            library('spring-cloud-eureka', 'org.springframework.cloud', 'spring-cloud-starter-netflix-eureka-client').versionRef('spring-cloud')
            library('spring-cloud-gateway', 'org.springframework.cloud', 'spring-cloud-starter-gateway').versionRef('spring-cloud')
            library('spring-cloud-feign', 'org.springframework.cloud', 'spring-cloud-starter-openfeign').versionRef('spring-cloud')
            library('circuit-breaker', 'io.github.resilience4j:resilience4j-circuitbreaker:2.1.0')

            library('jjwt-api', 'io.jsonwebtoken', 'jjwt-api').versionRef('io-json')
            library('jjwt-impl', 'io.jsonwebtoken', 'jjwt-impl').versionRef('io-json')
            library('jjwt-jackson', 'io.jsonwebtoken', 'jjwt-jackson').versionRef('io-json')

            library('json-path', 'com.jayway.jsonpath:json-path:2.5.0')
            library('gson', 'com.google.code.gson:gson:2.7')
            library('mapstruct', 'org.mapstruct', 'mapstruct').versionRef('mapstruct')
            library('mapstruct-processor', 'org.mapstruct', 'mapstruct-processor').versionRef('mapstruct')
            library('lombok', 'org.projectlombok:lombok:1.18.30')
            library('postgresql', 'org.postgresql:postgresql:42.6.0')

            library('spring-boot-test', 'org.springframework.boot', 'spring-boot-starter-test').versionRef('spring-boot')
            library('spring-security-test', 'org.springframework.security:spring-security-test:6.0.2')
            library('hamcrest', 'org.hamcrest:hamcrest:2.2')
            library('testcontainers-jupiter', 'org.testcontainers', 'junit-jupiter').versionRef('testcontainers')
            library('testcontainers-postgresql', 'org.testcontainers', 'postgresql').versionRef('testcontainers')
        }
    }
}
